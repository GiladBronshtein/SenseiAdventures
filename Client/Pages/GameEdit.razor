@page "/GameEdit/{gameCode}"
@inject HttpClient Http
@inject NavigationManager Nav
@using template.Shared.Models.Games;
@using template.Shared.Models.Users;
@using template.Client.Components;

<div class="container-fluid">
    <div class="row">
        <!-- Main Content -->
        <div class="col-md-10 main-content">
            <div class="row">
                <div class="col-12 p-3">
                    <CascadingValue Value="currentStage">

                    @switch (currentStage)
                    {
                        case StageEnum.Stage.StageA:
                            <StageBottleBreak gameCode="@gameCode" game="@gameData" />
                            break;
                        case StageEnum.Stage.StageB:
                            <StageTargetHit />
                            break;
                        case StageEnum.Stage.StageC:
                            <StageBazzerHit />
                            break;
                        case StageEnum.Stage.StageD:
                            <StageSlashing />
                            break;
                        default:
                            <StageDefault/>
                            break;
                    }
                    </CascadingValue>

                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-md-2 d-flex flex-column bg-dark text-white p-3 sidebar">
            <!-- Sidebar Header -->
            <div class="sidebar-heading d-flex justify-content-center align-items-center text-center">
                <a href="./maintable" class="text-white text-decoration-none">
                    <span>
                        חזרה למשחקים 
                        <i class="fa fa-arrow-left"></i>
                    </span>
                </a>
            </div>
            <hr class="bg-white">
            <!-- Stages -->
            <div class="sidebar-panel nav nav-pills flex-column">
                <span style="color:black;" class="enterExitText text-center">סיום הפסטיבל</span>
                <button type="button" class="btn btn-secondary sidebar-button" @onclick="() => SetStage(StageEnum.Stage.StageD)">לחתוך תשובות</button>
                <button type="button" class="btn btn-secondary sidebar-button" @onclick="() => SetStage(StageEnum.Stage.StageC)">פגיעה תשובה</button>
                <button type="button" class="btn btn-secondary sidebar-button" @onclick="() => SetStage(StageEnum.Stage.StageB)">פגיעה במטרה</button>
                <button type="button" class="btn btn-secondary sidebar-button" @onclick="() => SetStage(StageEnum.Stage.StageA)">שבירת בקבוקים</button>
                <span style="color:black;" class="enterExitText text-center">כניסה לפסטיבל</span>
            </div>
            <div class="d-flex flex-column align-items-center justify-content-center">
                <div class="text-center">
                    <i class="fa fa-gamepad" aria-hidden="true"></i>
                    <!-- Example text or other content -->
                    <p>Sensei Adventures</p>
                </div>
            </div>
            <div class="mt-auto">
                <hr class="bg-white">
                <!-- Sidebar Footer -->
                <div class="sidebar-footer text-center p-2">
                    <button type="button" class="btn btn-secondary w-100" value="publish">פרסום</button>
                </div>
            </div>
        </div>
    </div>

</div>


@code {
    [CascadingParameter]
    public int UserId { get; set; }

    [Parameter]
    public string gameCode { get; set; }
    
    GameDetails gameData;
    UserWithGames user;
    private StageEnum.Stage currentStage = StageEnum.Stage.None;

    protected override async Task OnInitializedAsync()
    {
        gameData = await Http.GetFromJsonAsync<GameDetails>($"api/Game/{UserId}/getGame/{gameCode}");
    }

    private void SetStage(StageEnum.Stage stage)
    {
        currentStage = stage;
    }
}